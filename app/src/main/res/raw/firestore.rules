rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access to all users under the conditions below
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Specific rules for classrooms collection
    match /classrooms/{classroomId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      
      // Allow create if user is authenticated and includes required fields
      allow create: if request.auth != null
        && request.resource.data.name is string
        && request.resource.data.description is string
        && request.resource.data.teacherId == request.auth.uid
        && request.resource.data.inviteCode is string;
        
      // Allow update only for the teacher who owns the classroom
      allow update: if request.auth.uid == resource.data.teacherId;
      
      // Allow delete only for the teacher who owns the classroom
      allow delete: if request.auth.uid == resource.data.teacherId;
      
      // Subcollections
      match /students/{studentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
          && request.resource.data.userId == request.auth.uid;
        allow update, delete: if false; // Only allow creation, no updates or deletes
      }
    }
    
    // Collection for invite codes
    match /invite_codes/{code} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
        && request.resource.data.classroomId is string
        && request.resource.data.createdBy == request.auth.uid
        && request.resource.data.expiresAt is timestamp;
      allow update, delete: if false; // Codes are immutable after creation
    }
  }
}
